[
  {
    "content": "python main.py",
    "timestamp": "2025-07-11T22:33:32.013132",
    "content_type": "command",
    "summary": null,
    "labels": [],
    "size": 14
  },
  {
    "content": "dge computing and ",
    "timestamp": "2025-07-11T22:33:49.035766",
    "content_type": "command",
    "summary": null,
    "labels": [],
    "size": 18
  },
  {
    "content": "Not just summarize you can ask it later like hey I what was the video I saw last week spoke about etc",
    "timestamp": "2025-07-11T22:34:28.059274",
    "content_type": "command",
    "summary": null,
    "labels": [
      "not",
      "just",
      "summarize",
      "ask",
      "later"
    ],
    "size": 104
  },
  {
    "content": "python qlm.py compile verilog testbench tb_axi\r\n",
    "timestamp": "2025-07-11T22:35:04.080992",
    "content_type": "command",
    "summary": null,
    "labels": [],
    "size": 48
  },
  {
    "content": "(base) PS D:\\edge-qlm> git fetch origin && git reset --hard origin/main\r\nAt line:1 char:18\r\n+ git fetch origin && git reset --hard origin/main\r\n+                  ~~\r\nThe token '&&' is not a valid statement separator in this version.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : InvalidEndOfLine",
    "timestamp": "2025-07-13T19:41:13.881247",
    "content_type": "json",
    "summary": null,
    "labels": [],
    "size": 368
  },
  {
    "content": "# Error: Failed to generate command - check logs for details",
    "timestamp": "2025-07-13T19:42:51.254492",
    "content_type": "error",
    "summary": null,
    "labels": [],
    "size": 60
  },
  {
    "content": "(base) PS D:\\edge-qlm> qlm command for verilog test\r\n2025-07-13 19:42:47,117 - src.audio_recorder - INFO - OpenAI Whisper is available\r\n2025-07-13 19:42:51,202 - src.command_generator_improved - ERROR - Failed to connect to Ollama. Is Ollama running on {config.OLLAMA_BASE_URL}?\r\nGenerated command (copied to clipboard):\r\n$$# Error: Failed to generate command - check logs for details$$\r\n2025-07-13 19:42:51,254 - src.clipboard_manager - INFO - Added clipboard entry: error (60 bytes)",
    "timestamp": "2025-07-13T19:42:57.258490",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 484
  },
  {
    "content": "# Error: Failed to generate command - check logs for details",
    "timestamp": "2025-07-13T19:44:37.323075",
    "content_type": "error",
    "summary": null,
    "labels": [],
    "size": 60
  },
  {
    "content": "30",
    "timestamp": "2025-07-13T19:45:28.021697",
    "content_type": "text",
    "summary": null,
    "labels": [],
    "size": 2
  },
  {
    "content": "# Edge-QLM Simple\r\n",
    "timestamp": "2025-07-13T20:00:13.720085",
    "content_type": "text",
    "summary": null,
    "labels": [],
    "size": 19
  },
  {
    "content": "2025-07-13 20:05:00,493 - __main__ - INFO - System info: {'error': 'argument 1 (impossible<bad format char>)'}\r\n2025-07-13 20:05:00,493 - __main__ - INFO - Initializing Edge-QLM components...\r\n2025-07-13 20:05:00,593 - src.clipboard_manager - INFO - Loaded 10 clipboard entries\r\n2025-07-13 20:05:00,594 - __main__ - INFO - Clipboard manager initialized\r\n2025-07-13 20:05:00,594 - src.audio_recorder - INFO - Loading OpenAI Whisper model: base\r\n2025-07-13 20:05:01,232 - src.audio_recorder - INFO - OpenAI Whisper model loaded successfully\r\n2025-07-13 20:05:01,233 - src.audio_recorder - INFO - Loaded 1 audio recordings\r\n2025-07-13 20:05:01,233 - __main__ - INFO - Audio recorder initialized    \r\n2025-07-13 20:05:01,233 - __main__ - INFO - Background processor initialized\r\n2025-07-13 20:05:01,267 - src.hotkey_manager - INFO - Hotkeys configured: Record=F9, Stop=F10, PTT=False\r\n2025-07-13 20:05:01,365 - src.hotkey_manager - INFO - Hotkey monitoring stopped\r\n2025-07-13 20:05:01,373 - src.hotkey_manager - INFO - Hotkey monitoring started\r\nQSystemTrayIcon::setVisible: No Icon set\r\n2025-07-13 20:05:05,525 - src.ui_simple - INFO - Simple Edge-QLM UI initialized\r\n2025-07-13 20:05:05,525 - __main__ - INFO - UI initialized\r\n2025-07-13 20:05:05,525 - __main__ - INFO - Starting background services...\r\n2025-07-13 20:05:05,526 - src.clipboard_manager - INFO - Clipboard monitoring started\r\n2025-07-13 20:05:05,526 - src.background_processor - INFO - Background processor started\r\n2025-07-13 20:05:05,526 - __main__ - INFO - All services started successfully\r\n2025-07-13 20:05:05,527 - __main__ - INFO - Starting UI...\r\n2025-07-13 20:05:15,733 - src.audio_recorder - INFO - Started recording: recording_20250713_200515.wav\r\n2025-07-13 20:05:19,469 - src.audio_recorder - INFO - Stopped recording: recording_20250713_200515.wav (116.04 KB, 3.7s)\r\n2025-07-13 20:05:20,473 - src.audio_recorder - INFO - Transcribing recording_20250713_200515.wav with OpenAI Whisper\r\nC:\\Users\\kvsud\\anaconda3\\Lib\\site-packages\\whisper\\transcribe.py:132: UserWarning: FP16 is not supported on CPU; using FP32 instead\r\n  warnings.warn(\"FP16 is not supported on CPU; using FP32 instead\")       \r\n2025-07-13 20:05:20,488 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified       \r\n2025-07-13 20:05:23,649 - src.audio_recorder - INFO - Transcribing recording_20250713_200515.wav with OpenAI Whisper\r\n2025-07-13 20:05:23,663 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified       \r\n2025-07-13 20:05:30,964 - src.audio_recorder - INFO - Started recording: recording_20250713_200530.wav\r\n2025-07-13 20:05:34,182 - src.audio_recorder - INFO - Stopped recording: recording_20250713_200530.wav (100.04 KB, 3.2s)\r\n2025-07-13 20:05:35,185 - src.audio_recorder - INFO - Transcribing recording_20250713_200530.wav with OpenAI Whisper\r\n2025-07-13 20:05:35,201 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified       \r\n",
    "timestamp": "2025-07-13T20:05:43.878640",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 3084
  },
  {
    "content": "# Edge-QLM - Simple & Powerful CLI Assistant\r\n\r\nA lightweight productivity tool for developers that combines clipboard management, audio recording, and AI-powered command generation in a simple, magical CLI experience.\r\n\r\n## ✨ What Makes It Special\r\n\r\n- **🎯 Simple CLI**: Just type `qlm \"what you want\"` and get executable commands\r\n- **🧠 Context-Aware**: Uses your PowerShell history for smarter suggestions\r\n- **📋 Always-On Clipboard**: Never lose anything you copy again\r\n- **🎤 Voice Notes**: Quick audio recording with automatic transcription\r\n- **⚡ Lightweight**: Modern PyQt6 GUI that stays out of your way\r\n- **🔒 Local AI**: Uses Ollama - your data never leaves your machine\r\n\r\n## Quick Start\r\n\r\n1. **Install Ollama** (required for command generation):\r\n   ```bash\r\n   # Download from https://ollama.com and install\r\n   ollama pull codellama:7b\r\n   ```\r\n\r\n2. **Install Edge-QLM**:\r\n   ```bash\r\n   git clone <repository-url>\r\n   cd edge-qlm\r\n   pip install -r requirements.txt\r\n   ```\r\n\r\n3. **Start using**:\r\n   ```bash\r\n   # Launch GUI\r\n   qlm gui\r\n\r\n   # Generate commands\r\n   qlm \"install nodejs using winget\"\r\n   qlm \"git commit all changes with message fix bug\"\r\n   \r\n   # With context (uses PowerShell history)\r\n   qlm -c \"run tests for current project\"\r\n   \r\n   # Quick actions\r\n   qlm r                    # Start recording\r\n   qlm clip-10             # Show last 10 clipboard items\r\n   ```\r\n\r\n## Core Features\r\n\r\n### 🤖 AI Command Generation\r\n- **Simple**: `qlm \"create new react app\"`\r\n- **Context-aware**: `qlm -c \"commit changes\"` (uses your recent commands)\r\n- **Windows-focused**: Optimized for PowerShell, winget, git, docker, etc.\r\n- **Smart output**: Commands wrapped in `$$command$$` and auto-copied\r\n\r\n### 📋 Clipboard Management\r\n- **Always running**: Saves everything you copy automatically\r\n- **Smart categorization**: Code, JSON, errors, logs, configs\r\n- **Powerful search**: Find anything you've copied, ever\r\n- **Large capacity**: Stores up to 10,000 entries\r\n- **CLI access**: `qlm clip-15` shows last 15 items in terminal\r\n\r\n### 🎤 Audio Recording & Transcription\r\n- **Hotkey recording**: F9 to start, F10 to stop (configurable)\r\n- **CLI recording**: `qlm r` for quick voice notes\r\n- **Auto-transcription**: Uses Whisper locally when CPU < 30%\r\n- **On-demand**: Transcribe specific recordings from GUI\r\n- **Smart processing**: Only processes when system is idle\r\n\r\n### 🎯 Modern GUI\r\n- **Clean interface**: Dark theme, tabbed design\r\n- **Model management**: Install/switch Ollama models easily\r\n- **Settings**: Adjust CPU thresholds, hotkeys, etc.\r\n- **System tray**: Always accessible, never in your way\r\n- **Launch from CLI**: `qlm gui` opens the interface\r\n\r\n## Installation\r\n\r\n### Prerequisites\r\n- **Python 3.8+**\r\n- **Ollama** (for AI features)\r\n- **Windows 10/11** (optimized for Windows, but works on other platforms)\r\n\r\n### Step-by-Step Setup\r\n\r\n1. **Install Ollama**:\r\n   ```bash\r\n   # Download from https://ollama.com\r\n   # After installation:\r\n   ollama pull codellama:7b\r\n   ollama serve  # Start the service\r\n   ```\r\n\r\n2. **Clone and Install**:\r\n   ```bash\r\n   git clone <repository-url>\r\n   cd edge-qlm\r\n   pip install -r requirements.txt\r\n   ```\r\n\r\n3. **Optional - Global CLI**:\r\n   ```powershell\r\n   # Windows PowerShell (run as administrator)\r\n   PowerShell -ExecutionPolicy Bypass -File install_qlm_global.ps1\r\n   ```\r\n\r\n4. **Test Installation**:\r\n   ```bash\r\n   python test_simple.py\r\n   qlm --test  # Test Ollama connection\r\n   ```\r\n\r\n## Usage Examples\r\n\r\n### Command Generation\r\n```bash\r\n# Development\r\nqlm \"create dockerfile for node app\"\r\nqlm \"find all typescript files modified today\"\r\nqlm -c \"run build and deploy to staging\"\r\n\r\n# Git operations\r\nqlm \"create new branch called feature/login\"\r\nqlm -c \"merge main and push changes\"\r\n\r\n# System administration\r\nqlm \"install docker desktop using winget\"\r\nqlm \"restart windows service called MyService\"\r\nqlm \"check disk space on all drives\"\r\n\r\n# File operations\r\nqlm \"copy all json files to backup folder\"\r\nqlm \"find files larger than 100MB\"\r\n```\r\n\r\n### Quick Actions\r\n```bash\r\nqlm gui          # Launch GUI\r\nqlm r            # Start recording\r\nqlm clip-15      # Show last 15 clipboard items\r\nqlm --test       # Test Ollama connection\r\n```\r\n\r\n### Context-Aware Generation\r\n```bash\r\n# The -c flag uses your recent PowerShell history for context\r\nqlm -c \"commit these changes\"           # Knows what files you've been working on\r\nqlm -c \"run the tests\"                  # Understands your project structure\r\nqlm -c \"deploy to production\"           # Uses context from recent commands\r\n```\r\n\r\n## Configuration\r\n\r\nEdit `config.py` to customize:\r\n\r\n```python\r\n# Ollama Settings\r\nOLLAMA_BASE_URL = \"http://localhost:11434\"\r\nOLLAMA_MODEL = \"codellama:7b\"\r\n\r\n# Clipboard Settings\r\nCLIPBOARD_MAX_ENTRIES = 10000\r\nCLIPBOARD_MONITOR_INTERVAL = 1.0\r\n\r\n# Audio Settings\r\nWHISPER_MODEL = \"base\"  # tiny, base, small, medium, large\r\nCPU_THRESHOLD = 30      # Auto-transcribe when CPU < 30%\r\n\r\n# UI Settings\r\nUI_WINDOW_WIDTH = 1000\r\nUI_WINDOW_HEIGHT = 700\r\n```\r\n\r\n## Troubleshooting\r\n\r\n### Ollama Connection Issues\r\n```bash\r\n# Check if Ollama is running\r\nqlm --test\r\n\r\n# Start Ollama service\r\nollama serve\r\n\r\n# Check available models\r\nollama list\r\n\r\n# Install a model\r\nollama pull codellama:7b\r\n```\r\n\r\n### Common Issues\r\n1. **\"Ollama connection failed\"**: Run `ollama serve` in a terminal\r\n2. **GUI won't start**: Install PyQt6: `pip install PyQt6`\r\n3. **Audio not working**: Check microphone permissions\r\n4. **CLI not found**: Run the global installer or use `python qlm.py`\r\n\r\n## Architecture\r\n\r\n- **Lightweight**: Minimal dependencies, fast startup\r\n- **Modular**: Clean separation of CLI, GUI, and core features\r\n- **Local-first**: All AI processing happens on your machine\r\n- **Background-friendly**: Smart CPU usage, idle-time processing\r\n\r\n## Why Edge-QLM?\r\n\r\n- **🚀 Instant**: Commands generated in seconds\r\n- **🧠 Smart**: Context-aware suggestions\r\n- **🔒 Private**: Your data stays on your machine\r\n- **⚡ Fast**: Lightweight, responsive interface\r\n- **🎯 Focused**: Does a few things really well\r\n\r\n## Contributing\r\n\r\n1. Fork the repository\r\n2. Create a feature branch\r\n3. Make your changes\r\n4. Test thoroughly\r\n5. Submit a pull request\r\n\r\n## License\r\n\r\nMIT License - see LICENSE file for details.\r\n\r\n---\r\n\r\n**Made for developers who want their tools to just work.** 🚀 ",
    "timestamp": "2025-07-13T20:06:29.902973",
    "content_type": "json",
    "summary": null,
    "labels": [],
    "size": 6408
  },
  {
    "content": "### About project\r\n\r\n### Problem:\r\n\r\nSemiconductor and software engineers often:\r\n\r\n- Repeatedly type the same EDA tool commands, bash/git commands, and script snippets;\r\n- Copy a lot of temporary data (logs, JSON, configs) and lose track of it;\r\n- Struggle to recall what was discussed in meetings without manual notes;\r\n- Waste time re-explaining context to command generators when generating multi-step flows.\r\n\r\n---\r\n\r\n### Idea:\r\n\r\nBuild an **offline productivity tool** that runs on the user's machine and:\r\n\r\n1. Saves clipboard history with timestamps and content types;\r\n2. Summarizes and labels clipboard entries during idle CPU time;\r\n3. Generates bash, git, and EDA commands using a **local coding model**, with optional **session context**;\r\n4. Records system audio (e.g., meetings), then transcribes and summarizes it when CPU is idle;\r\n5. Limits audio recordings to the latest **10 files**, automatically deleting older ones;\r\n6. Runs fully offline, keeping all data private and local.\r\n\r\n---\r\n\r\n### Key Features:\r\n\r\n- **Clipboard manager:** logs all copied text with timestamps, type labels (code, JSON, error, etc.).\r\n- **Clipboard search:** keyword or semantic search; copy entries back to clipboard.\r\n- **Idle-time background processor:** auto-summarizes long clips, labels them for faster search.\r\n- **Audio recorder:** captures meeting/system audio, summarizes it later in idle time; keeps only the last 10 recordings.\r\n- **Command generator (`qlm`) with two modes:**\r\n    - General natural language → bash/git/EDA command generation.\r\n    - Code/script generation for quick snippets.\r\n    - Uses **coding model for both CLI and code tasks.**\r\n- **Session context support (`qlm -c`):**\r\n    - When you run:\r\n        \r\n        ```powershell\r\n        qlm -c compile verilog for chiplet2\r\n        ```\r\n        \r\n    - The LLM remembers your previous commands in the session:\r\n        - Example session context: project path, last compiled module, tool versions, etc.\r\n    - Context is cleared when the session ends\r\n\r\n---\r\n\r\n### Example 1: Verilog Compilation Command\r\n\r\n```powershell\r\n(base) PS C:\\design\\rtl> qlm compile verilog testbench tb_axi\r\n\r\nGenerated & copied to clipboard:\r\nvcs -full64 -sverilog -debug_all -l compile.log tb_axi.s\r\n```\r\n\r\n---\r\n\r\n### Example 2: Regression Test Run Command with Context\r\n\r\n```powershell\r\n(base) PS C:\\workspace\\regression> qlm -c run regression for uart flow with coverage analysis and error injection at cycle 5000 save results to jenkins\r\n\r\nGenerated & copied to clipboard (context: last project was \"regression\", last run used coverage mode):\r\nqual_regression run --flow=uart --coverage=all --error-inject=cycle:5000 --save-results --jenkins-upload --log-level=debug --timeout=3600 --notify=slack --config=default\r\n```\r\n\r\n---\r\n\r\n### MVP Scope:\r\n\r\n- Clipboard saver (with timestamped JSON log).\r\n- Command generator with sessionless and context-aware CLI modes.\r\n- Basic UI to search clipboard history.\r\n- Idle-time summarization and auto-labeling of clipboard data.\r\n- Audio recording, transcription, and summarization.\r\n- Audio file cleanup (keep only the last 10 recordings).\r\n- Entire MVP in Python; CLI and background processing to migrate to C++ for performance in production.",
    "timestamp": "2025-07-13T20:09:23.994174",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 3245
  },
  {
    "content": "Slide 1: Why Edge-QLM?\n🧱 Real Problems Developers Face:\nConstantly retyping bash, git, EDA commands\n\nLosing track of copied logs, configs, JSONs\n\nWindows clipboard has no search, no labels, no timestamps\n\nManual note-taking in meetings → easily forgotten\n\nLLM tools forget context every time → repetitive prompts\n\n💡 The Idea:\nBuild a fully offline CLI assistant that:\n\nLogs everything you copy, with timestamps + content type\n\nLets you search clipboard by keyword or type\n\nUses idle CPU time to summarize + label long clips\n\nRecords & transcribes system audio when you're not busy\n\nGenerates context-aware bash/git/EDA commands using a local coding model\n\nKeeps everything local and private — no internet needed\n\nSlide 2: What It Does\n🔧 Core Features:\nqlm \"create branch for feature/login\" → smart, local command generation\n\nqlm clip-10 → show your last 10 copied items, searchable and labeled\n\nqlm r → start audio recording; transcribed later when system is idle\n\nqlm -c \"rerun uart regression\" → remembers last project context\n\n⚡ What’s Under the Hood:\n📋 Clipboard manager with full history + semantic labels\n\n🎤 Whisper ASR for voice-to-text — auto-summarized\n\n🧠 Local LLM via Ollama (soon migrating to Qualcomm AI Hub)\n\nAccelerated by Snapdragon NPU\n\nTrue on-device inference for both LLM + transcription\n\nRuns when idle = laid-back processing\n\nEdge-QLM isn’t a code assistant — it’s your terminal-native memory + helper, built for edge, built for flow.",
    "timestamp": "2025-07-13T20:11:00.040606",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 1500
  },
  {
    "content": "Edge-QLM: Offline CLI Productivity Assistant\n🚧 Problem:\nRepeating bash/git/EDA commands\n\nWindows clipboard = no search, no tags, no timestamps\n\nLost logs, configs, notes\n\nManual meeting notes\n\nAI tools forget context every time\n\n💡 Solution:\nqlm: Local SLM generates CLI commands (bash, git, EDA)\n\nClipboard manager: Logs + tags everything you copy\n\nSearchable history (qlm clip-search error)\n\nVoice recorder: Records & auto-transcribes in idle time\n\nSession-aware context (qlm -c) for smarter commands\n\nKeeps last 10 audio clips, auto-cleans\n\n🔒 Fully Offline, Truly Edge:\nNo cloud, no tracking\n\nRuns Whisper + LLM locally via Ollama\n\nMigrating to Qualcomm AI Hub (NPU-accelerated)\n\nOnly runs heavy tasks when system is idle\n\n⚙️ Laid-back edge-native automation\n\nNot a coder’s copilot. Just your terminal’s smarter memory.",
    "timestamp": "2025-07-13T20:11:38.060444",
    "content_type": "error",
    "summary": null,
    "labels": [],
    "size": 838
  },
  {
    "content": "base) PS D:\\edge-qlm> qlm --gui\r\n2025-07-13 20:13:16,093 - src.audio_recorder - INFO - OpenAI Whisper is available\r\nLaunching GUI...\r\n(base) PS D:\\edge-qlm> 2025-07-13 20:13:18,737 - src.audio_recorder - INFO - OpenAI Whisper is available\r\n2025-07-13 20:13:18,862 - __main__ - INFO - Starting Edge-QLM MVP...\r\n╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗\r\n║                                                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  ███████╗██████╗  ██████╗ ███████╗      ██████╗ ██╗     ███╗   ███╗                                                                               \r\n                                                                          \r\n                                                                        ║ \r\n║  ██╔════╝██╔══██╗██╔════╝ ██╔════╝     ██╔═══██╗██║     ████╗ ████║                                                                               \r\n                                                                          \r\n                                                                        ║ \r\n║  █████╗  ██║  ██║██║  ███╗█████╗       ██║   ██║██║     ██╔████╔██║                                                                               \r\n                                                                          \r\n                                                                        ║ \r\n║  ██╔══╝  ██║  ██║██║   ██║██╔══╝       ██║▄▄ ██║██║     ██║╚██╔╝██║                                                                               \r\n                                                                          \r\n                                                                        ║ \r\n║  ███████╗██████╔╝╚██████╔╝███████╗     ╚██████╔╝███████╗██║ ╚═╝ ██║                                                                               \r\n                                                                          \r\n                                                                        ║ \r\n║  ╚══════╝╚═════╝  ╚═════╝ ╚══════╝      ╚══▀▀═╝ ╚══════╝╚═╝     ╚═╝                                                                               \r\n                                                                          \r\n                                                                        ║ \r\n║                                                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  Productivity Tool for Semiconductor & Software Engineers               \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n  ║\r\n║  Version: 0.1.0 MVP                                                     \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n  ║\r\n║                                                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  Features:                                                              \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  • Clipboard History Management                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  • Command Generation (qlm CLI)                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n  ║\r\n║  • Audio Recording & Transcription                                      \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n  ║\r\n║  • Background Processing                                                \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║                                                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  Usage:                                                                 \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n║  • Run 'python main.py' to start the GUI                                \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n ║\r\n║  • Run 'python -m src.command_generator' for qlm CLI                    \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n ║\r\n║                                                                         \r\n                                                                          \r\n                                                                          \r\n                                                                          \r\n   ║\r\n╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝\r\n\r\n2025-07-13 20:13:18,884 - __main__ - INFO - System info: {'error': 'argument 1 (impossible<bad format char>)'}\r\n2025-07-13 20:13:18,885 - __main__ - INFO - Initializing Edge-QLM components...\r\n2025-07-13 20:13:18,887 - src.clipboard_manager - INFO - Loaded 15 clipboard entries\r\n2025-07-13 20:13:18,888 - __main__ - INFO - Clipboard manager initialized \r\n2025-07-13 20:13:18,888 - src.audio_recorder - INFO - Loading OpenAI Whisper model: base\r\n2025-07-13 20:13:19,471 - src.audio_recorder - INFO - OpenAI Whisper model loaded successfully\r\n2025-07-13 20:13:19,482 - src.audio_recorder - INFO - Loaded 4 audio recordings\r\n2025-07-13 20:13:19,483 - __main__ - INFO - Audio recorder initialized    \r\n2025-07-13 20:13:19,483 - __main__ - INFO - Background processor initialized\r\n2025-07-13 20:13:19,514 - src.hotkey_manager - INFO - Hotkeys configured: Record=F9, Stop=F10, PTT=False\r\n2025-07-13 20:13:19,675 - src.hotkey_manager - INFO - Hotkey monitoring stopped\r\n2025-07-13 20:13:19,681 - src.hotkey_manager - INFO - Hotkey monitoring started\r\nQSystemTrayIcon::setVisible: No Icon set\r\n2025-07-13 20:13:24,237 - src.ui_simple - INFO - Simple Edge-QLM UI initialized\r\n2025-07-13 20:13:24,238 - __main__ - INFO - UI initialized\r\n2025-07-13 20:13:24,238 - __main__ - INFO - Starting background services...\r\n2025-07-13 20:13:24,238 - src.clipboard_manager - INFO - Clipboard monitoring started\r\n2025-07-13 20:13:24,239 - src.background_processor - INFO - Background processor started\r\n2025-07-13 20:13:24,239 - __main__ - INFO - All services started successfully\r\n2025-07-13 20:13:24,239 - __main__ - INFO - Starting UI...\r\n2025-07-13 20:13:27,743 - src.audio_recorder - INFO - Started recording: recording_20250713_201327.wav\r\n2025-07-13 20:13:30,961 - src.audio_recorder - INFO - Stopped recording: recording_20250713_201327.wav (100.04 KB, 3.2s)\r\n2025-07-13 20:13:31,963 - src.audio_recorder - INFO - Transcribing recording_20250713_201327.wav with OpenAI Whisper\r\nC:\\Users\\kvsud\\anaconda3\\Lib\\site-packages\\whisper\\transcribe.py:132: UserWarning: FP16 is not supported on CPU; using FP32 instead\r\n  warnings.warn(\"FP16 is not supported on CPU; using FP32 instead\")       \r\n2025-07-13 20:13:31,976 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified       \r\n2025-07-13 20:13:34,486 - src.audio_recorder - INFO - Transcribing recording_20250713_201327.wav with OpenAI Whisper\r\n2025-07-13 20:13:34,498 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified   ",
    "timestamp": "2025-07-13T20:13:44.123437",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 11737
  },
  {
    "content": "════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝\r\n\r\n2025-07-13 20:15:49,005 - __main__ - INFO - System info: {'error': 'argument 1 (impossible<bad format char>)'}\r\n2025-07-13 20:15:49,005 - __main__ - INFO - Initializing Edge-QLM components...\r\n2025-07-13 20:15:49,009 - src.clipboard_manager - INFO - Loaded 16 clipboard entries\r\n2025-07-13 20:15:49,009 - __main__ - INFO - Clipboard manager initialized \r\n2025-07-13 20:15:49,009 - src.audio_recorder - INFO - Loading OpenAI Whisper model: base\r\n2025-07-13 20:15:49,561 - src.audio_recorder - INFO - OpenAI Whisper model loaded successfully\r\n2025-07-13 20:15:49,573 - src.audio_recorder - INFO - Loaded 2 audio recordings\r\n2025-07-13 20:15:49,574 - __main__ - INFO - Audio recorder initialized    \r\n2025-07-13 20:15:49,574 - __main__ - INFO - Background processor initialized\r\n2025-07-13 20:15:49,625 - src.hotkey_manager - INFO - Hotkeys configured: Record=F9, Stop=F10, PTT=False\r\n2025-07-13 20:15:49,769 - src.hotkey_manager - INFO - Hotkey monitoring stopped\r\n2025-07-13 20:15:49,776 - src.hotkey_manager - INFO - Hotkey monitoring started\r\nQSystemTrayIcon::setVisible: No Icon set\r\n2025-07-13 20:15:54,401 - src.ui_simple - INFO - Simple Edge-QLM UI initialized\r\n2025-07-13 20:15:54,401 - __main__ - INFO - UI initialized\r\n2025-07-13 20:15:54,401 - __main__ - INFO - Starting background services...\r\n2025-07-13 20:15:54,402 - src.clipboard_manager - INFO - Clipboard monitoring started\r\n2025-07-13 20:15:54,403 - src.background_processor - INFO - Background processor started\r\n2025-07-13 20:15:54,403 - __main__ - INFO - All services started successfully\r\n2025-07-13 20:15:54,403 - __main__ - INFO - Starting UI...\r\n2025-07-13 20:15:56,537 - src.audio_recorder - INFO - Started recording: recording_20250713_201556.wav\r\n2025-07-13 20:15:59,632 - src.audio_recorder - INFO - Stopped recording: recording_20250713_201556.wav (96.04 KB, 3.1s)\r\n2025-07-13 20:16:00,636 - src.audio_recorder - INFO - Transcribing recording_20250713_201556.wav with OpenAI Whisper\r\n2025-07-13 20:16:00,636 - src.audio_recorder - INFO - File path: D:\\edge-qlm\\data\\audio\\recording_20250713_201556.wav\r\n2025-07-13 20:16:00,636 - src.audio_recorder - INFO - File size: 98348 bytes\r\nC:\\Users\\kvsud\\anaconda3\\Lib\\site-packages\\whisper\\transcribe.py:132: UserWarning: FP16 is not supported on CPU; using FP32 instead\r\n  warnings.warn(\"FP16 is not supported on CPU; using FP32 instead\")       \r\n2025-07-13 20:16:00,649 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified       \r\n2025-07-13 20:16:00,649 - src.audio_recorder - ERROR - Audio file: D:\\edge-qlm\\data\\audio\\recording_20250713_201556.wav\r\n2025-07-13 20:16:00,651 - src.audio_recorder - ERROR - Working directory: D:\\edge-qlm",
    "timestamp": "2025-07-13T20:16:31.421273",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 3344
  },
  {
    "content": "es\r\nC:\\Users\\kvsud\\anaconda3\\Lib\\site-packages\\whisper\\transcribe.py:132: UserWarning: FP16 is not supported on CPU; using FP32 instead\r\n  warnings.warn(\"FP16 is not supported on CPU; using FP32 instead\")       \r\n2025-07-13 20:16:00,649 - src.audio_recorder - ERROR - Error in Whisper transcription: [WinError 2] The system cannot find the file specified       \r\n2025-07-13 20:16:00,649 - src.audio_recorder - ERROR - Audio file: D:\\edge-qlm\\data\\audio\\recording_20250713_201556.wav\r\n2025-07-13 20:16:00,651 - src.audio_recorder - ERROR - Working directory: D:\\edge-qlm\r\n2025-07-13 20:16:30,868 - src.clipboard_manager - INFO - Added clipboard entry: code (3344 bytes)\r\n2025-07-13 20:16:31,329 - src.clipboard_manager - INFO - Added clipboard entry: code (3344 bytes)\r\n2025-07-13 20:16:31,421 - src.clipboard_manager - INFO - Added clipboard entry: code (3344 bytes)\r\n2025-07-13 20:16:35,796 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,310 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,342 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,373 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,404 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,435 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,466 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,496 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,528 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,573 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,604 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,635 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,667 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,697 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,728 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,759 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,807 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,837 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,868 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,898 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,931 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:36,962 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,262 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,773 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,805 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,834 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,865 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,895 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,942 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:40,973 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,003 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,034 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,064 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,094 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,126 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,173 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,204 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,234 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,265 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,296 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,327 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,358 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,403 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,435 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,467 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,498 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,528 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,560 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,591 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,624 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,654 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,701 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,732 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,763 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,794 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,826 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,856 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,887 - src.hotkey_manager - WARNING - Audio recorder not available\r\n2025-07-13 20:16:41,932 - src.hotkey_manager - WARNING - Audio recorder not available\r\n",
    "timestamp": "2025-07-13T20:16:50.434231",
    "content_type": "code",
    "summary": null,
    "labels": [],
    "size": 6001
  }
]